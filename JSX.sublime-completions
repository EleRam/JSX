{
    "scope": "source.js.jsx, source.js",
    "completions": [
        // {"trigger": "Array", "contents": "Array(${1})" },
        // {"trigger": "boolean", "contents": "boolean" },
        // {"trigger": "byte", "contents": "byte" },
        // {"trigger": "char", "contents": "char" },
        // {"trigger": "class", "contents": "class" },
        // {"trigger": "const", "contents": "const" },
        // {"trigger": "Date", "contents": "Date(${1})" },
        // {"trigger": "decodeURI", "contents": "decodeURI(${1})" },
        // {"trigger": "decodeURIComponent", "contents": "decodeURIComponent(${1})" },
        // {"trigger": "document", "contents": "document" },
        // {"trigger": "double", "contents": "double" },
        // {"trigger": "encodeURI", "contents": "encodeURI(${1})" },
        // {"trigger": "encodeURIComponent", "contents": "encodeURIComponent(${1})" },
        // {"trigger": "enum", "contents": "enum" },
        // {"trigger": "escape", "contents": "escape" },
        // {"trigger": "eval", "contents": "eval" },
        // {"trigger": "export", "contents": "export" },
        // {"trigger": "extends", "contents": "extends" },
        // {"trigger": "final", "contents": "final" },
        // {"trigger": "float", "contents": "float" },
        // {"trigger": "function", "contents": "function" },
        // {"trigger": "implements", "contents": "implements" },
        // {"trigger": "import\t x from 'x'", "contents": "import ${1} from '${2}${1}'"},
        // {"trigger": "int", "contents": "int" },
        // {"trigger": "interface", "contents": "interface" },
        // {"trigger": "isFinite", "contents": "isFinite(${1})" },
        // {"trigger": "isNaN", "contents": "isNaN(${1})" },
        // {"trigger": "long", "contents": "long" },
        // {"trigger": "map", "contents": "map(${1})" },
        // {"trigger": "Math", "contents": "Math" },
        // {"trigger": "native", "contents": "native" },
        // {"trigger": "Number", "contents": "Number" },
        // {"trigger": "Object", "contents": "Object" },
        // {"trigger": "parseFloat", "contents": "parseFloat(${1})" },
        // {"trigger": "parseInt", "contents": "parseInt(${1}, ${2:10})" },
        // {"trigger": "pop", "contents": "pop()" },
        // {"trigger": "private", "contents": "private" },
        // {"trigger": "Promise", "contents": "Promise" },
        // {"trigger": "protected", "contents": "protected" },
        // {"trigger": "Proxy", "contents": "Proxy" },
        // {"trigger": "public", "contents": "public" },
        // {"trigger": "push", "contents": "push" }, 
        // {"trigger": "require\tvar x = require('x')", "contents": "var ${1} = require('${2}${1}');" },        
        // {"trigger": "RegExp", "contents": "RegExp(${1})" },
        // {"trigger": "reverse", "contents": "reverse()" },
        // {"trigger": "Set", "contents": "Set(${1})" },
        // {"trigger": "shift", "contents": "shift()" },
        // {"trigger": "short", "contents": "short" },
        // {"trigger": "sort", "contents": "sort(${1})" },
        // {"trigger": "splice", "contents": "splice(${1})" },
        // {"trigger": "static", "contents": "static" },
        // {"trigger": "String", "contents": "String" },
        // {"trigger": "throws", "contents": "throws" },
        // {"trigger": "unescape", "contents": "unescape(${1})" },
        // {"trigger": "unshift", "contents": "unshift(${1})" },
        // {"trigger": "var", "contents": "var" },
        // {"trigger": "void", "contents": "void" },
        // {"trigger": "window", "contents": "window" }, 


        // {"trigger": "console.log", "contents": "console.log(${1})"},
        // {"trigger": "console.dir", "contents": "console.dir(${1})"},
        // {"trigger": "console.table", "contents": "console.table(${1})"},
        // {"trigger": "console.warn", "contents": "console.warn(${1})"},
        // {"trigger": "console.error", "contents": "console.error(${1})"},
        
        
        
        // {"trigger": "Component\tReact", "contents": "Component"},
        // {"trigger": "createClass()\tReact", "contents": "createClass(${1:object})"},
        // {"trigger": "createElement()\tReact", "contents": "createElement(${1:type}${2:, ${3:props}, ${4:children}})"},
        // {"trigger": "cloneElement()\tReact", "contents": "cloneElement(${1:element}${2:, ${3:props}, ${4:children}}))"},
        // {"trigger": "createFactory()\tReact", "contents": "createFactory(${1:type})"},
        // {"trigger": "isValidElement()\tReact", "contents": "isValidElement(${1})"},

        // {"trigger": "Children.map()\tReact", "contents": "Children.map(${1:children}, ${2})"},
        // {"trigger": "Children.forEach()\tReact", "contents": "Children.forEach(${1:children}, ${2})"},
        // {"trigger": "Children.count()\tReact", "contents": "Children.count(${1:children})"},
        // {"trigger": "Children.only()\tReact", "contents": "Children.only(${1:children})"},
        // {"trigger": "Children.toArray()\tReact", "contents": "Children.toArray(${1:children})"},

        
        // {"trigger": "render()\tReactDOM", "contents": "render(${1:ReactElement}, ${2:DOMElement}, ${3:callback})"},
        // {"trigger": "unmountComponentAtNode()\tReactDOM", "contents": "unmountComponentAtNode(${1:DOMElement})"},
        // {"trigger": "findDOMNode()\tReactDOM", "contents": "findDOMNode(${1:ReactComponent})"},

        // {"trigger": "renderToString()\tReactDOMSever", "contents": "renderToString(${1})"},
        // {"trigger": "renderToStaticMarkup()\tReactDOMSever", "contents": "renderToStaticMarkup(${1})"},

        // {"trigger": "React.PropTypes.string", "contents": "React.PropTypes.string"},
        // {"trigger": "PropTypes.string", "contents": "PropTypes.string"},
        // {"trigger": "React.PropTypes.array", "contents": "React.PropTypes.array"},
        // {"trigger": "PropTypes.array", "contents": "PropTypes.array"},
        // {"trigger": "React.PropTypes.arrayOf", "contents": "React.PropTypes.arrayOf(${1})"},
        // {"trigger": "PropTypes.arrayOf", "contents": "PropTypes.arrayOf(${1})"},
        // {"trigger": "React.PropTypes.bool", "contents": "React.PropTypes.bool"},
        // {"trigger": "PropTypes.bool", "contents": "PropTypes.bool"},
        // {"trigger": "React.PropTypes.element", "contents": "React.PropTypes.element"},
        // {"trigger": "PropTypes.element", "contents": "PropTypes.element"},
        // {"trigger": "React.PropTypes.func", "contents": "React.PropTypes.func"},
        // {"trigger": "PropTypes.func", "contents": "PropTypes.func"},
        // {"trigger": "React.PropTypes.instanceOf", "contents": "React.PropTypes.instanceOf(${1})"},
        // {"trigger": "PropTypes.instanceOf", "contents": "PropTypes.instanceOf(${1})"},
        // {"trigger": "isRequired", "contents": "isRequired"},
        // {"trigger": "React.PropTypes.number", "contents": "React.PropTypes.number"},
        // {"trigger": "PropTypes.number", "contents": "PropTypes.number"},
        // {"trigger": "React.PropTypes.object", "contents": "React.PropTypes.object"},
        // {"trigger": "PropTypes.object", "contents": "PropTypes.object"},
        // {"trigger": "React.PropTypes.objectOf", "contents": "React.PropTypes.objectOf(${1})"},
        // {"trigger": "PropTypes.objectOf", "contents": "PropTypes.objectOf(${1})"},
        // {"trigger": "React.PropTypes.oneOf", "contents": "React.PropTypes.oneOf([${1}])"},
        // {"trigger": "PropTypes.oneOf", "contents": "PropTypes.oneOf([${1}])"},
        // {"trigger": "React.PropTypes.oneOfType", "contents": "React.PropTypes.oneOfType([${1}])"},
        // {"trigger": "PropTypes.oneOfType", "contents": "PropTypes.oneOfType([${1}])"},
        // {"trigger": "React.PropTypes.shape", "contents": "React.PropTypes.shape({${1}})"},
        // {"trigger": "PropTypes.shape", "contents": "PropTypes.shape({${1}})"},
        // {"trigger": "React.PropTypes.string", "contents": "React.PropTypes.string"},
        // {"trigger": "PropTypes.string", "contents": "PropTypes.string"},
        // {"trigger": "proptypes", "contents": "proptypes"},


        // {"trigger": "constructor\tReact.Component", "contents": "constructor(props) {\n\tsuper(props);\n\t${1:}\n}"},
        // {"trigger": "render", "contents": "render() {\n\t${1:}\n}"},

        // {"trigger": "componentDidMount\t Life Cycle", "contents": "componentDidMount() {\n\t${1:}\n}"},
        // {"trigger": "componentDidUpdate\t Life Cycle", "contents": "componentDidUpdate(prevProps, prevState) {\n\t${1:}\n}"},
        // {"trigger": "componentWillMount\t Life Cycle", "contents": "componentWillMount() {\n\t${1:}\n}"},
        // {"trigger": "componentWillReceiveProps\t Life Cycle", "contents": "componentWillReceiveProps(nextProps) {\n\t${1:}\n}"},
        // {"trigger": "componentWillUnmount\t Life Cycle", "contents": "componentWillUnmount() {\n\t${1:}\n}"},
        // {"trigger": "componentWillUpdate\t Life Cycle", "contents": "componentWillUpdate(nextProps, nextState) {\n\t${1:}\n}"},
        // {"trigger": "getDefaultProps\t Life Cycle", "contents": "getDefaultProps() {\n\t${1:}\n}"},
        // {"trigger": "getInitialState\t Life Cycle", "contents": "getInitialState() {\n\t${1:}\n}"},
        // {"trigger": "shouldComponentUpdate\t Life Cycle", "contents": "shouldComponentUpdate(nextProps, nextState) {\n\t${1:}\n}"}

        
    ]
}
